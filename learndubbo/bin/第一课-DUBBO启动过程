1、使用了spring的schema扩展机制。故对应的有
	DubboNamespaceHandler和DubboBeanDefinitionParser
	具体对应信息如下：
		• application对应ApplicationConfig
		• registry对应RegistryConfig
		• monitor对应MonitorConfig
		• provider对应ProviderConfig
		• consumer对应ConsumerConfig
		• protocol对应ProtocolConfig
		• service对应ServiceConfig
		• reference对应ReferenceConfig
2、具体DUBBO的Provider初始成为什么Bean?
	(1)DUBBO可以不依赖于Spring独立运行，此时，配置service对应ServiceConfig
	(2)为了集成Spring,加入了ServiceBean继承了ServiceConfig。

3、DUBBO的COUSUME怎么初始化？
	Consumer配置与ReferenceConfig对应。为了与Spring集成，发现服务的过程又加入了一个和Spring相关联的ReferenceBean，继承了ReferenceConfig。
	利用Spring就做了上述过程，得到相应的配置数据，然后启动相应的服务。如果想剥离Spring，我们就可以手动来创建上述配置对象，通过ServiceConfig和ReferenceConfig的API来启动相应的服务
	